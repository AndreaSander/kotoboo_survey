<<<<<<< Updated upstream
3. By country info
```{r}
=======
geom_point(size=5)+
theme_bw() +
labs(x="Importance Ranking 1-14", y="Feature")+
xlim(1, 14) +
annotate("text", y=1, x=3, label="most important <-", color="red") +
annotate("text", y=1, x=10, label="least important ->", color ="red")
by_topic <- x_2022_september_qualtrics_data %>%
select(which_topics_interest)%>%
drop_na() %>%
mutate ("language learning in bilingual and multilingual contexts" = case_when(str_detect(which_topics_interest,"Language learning in bilingual and multilingual contexts") ~ "1", TRUE ~ "0")) %>%
mutate ("the effect of screen time on language learning" = case_when(str_detect(which_topics_interest,"The effects of screen time on language learning") ~ "1", TRUE ~ "0")) %>%
mutate ("language diversity (differences and similarities of languages across the world)" = case_when(str_detect(which_topics_interest,"Language diversity") ~ "1", TRUE ~ "0")) %>%
mutate ("learning sign languages" = case_when(str_detect(which_topics_interest,"Learning sign languages") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to foster language learning" = case_when(str_detect(which_topics_interest,"Ways to foster language learning") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to develop reading/writing abilities" = case_when(str_detect(which_topics_interest,"Ways to develop reading") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to foster language learning in children with developmental disorders" = case_when(str_detect(which_topics_interest,"Ways to foster language learning in children with developmental disorders") ~ "1", TRUE ~ "0")) %>%
mutate ("debunking commonly believed myths" = case_when(str_detect(which_topics_interest,"Debunking commonly believed myths") ~ "1", TRUE ~ "0")) %>%
pivot_longer(cols = c("debunking commonly believed myths",
"ways to foster language learning in children with developmental disorders",
"ways to develop reading/writing abilities",
"ways to foster language learning",
"learning sign languages",
"language diversity (differences and similarities of languages across the world)",
"the effect of screen time on language learning",
"language learning in bilingual and multilingual contexts"),
names_to = "topic", values_to = "n") %>%
filter(n == "1") %>%
select(topic) %>%
group_by(topic) %>%
tally() %>%
mutate(percentage = (n/sum(n))*100) %>%
mutate(percentage = round(percentage, digits=0))
by_topic <- x_2022_september_qualtrics_data %>%
select(which_topics_interest)%>%
drop_na()
View(x_2022_september_qualtrics_data)
str(x_2022_september_qualtrics_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004)
203-164
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164
filter(year_birth >=1922)
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164
filter(year_birth >=1922) %>%
filter(consent=="I consent")
View(x_2022_september_qualtrics_data)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004)
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164 39 excluded
filter(year_birth >=1922)
#203
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164 39 excluded
filter(year_birth >=1922) %>% #2 more excluded
filter(recaptcha_score >=.80)
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164 39 excluded
filter(year_birth >=1922) %>% #2 more excluded
filter(recaptcha_score >=.80) %>% #1 more excluded
filter(consent=="I consent")
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other))  %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
mutate(is_grandparent = case_when(is_grandparent == "Grandparent" ~ "T",
TRUE~"F")) %>%
mutate(is_babysitter = case_when(is_babysitter == "Nanny/Babysitter" ~ "T",
TRUE~"F")) %>%
mutate(is_aunt_uncle = case_when(is_aunt_uncle == "Uncle/Aunt" ~ "T",
TRUE~"F"))%>%
mutate(is_sibling = case_when(is_sibling == "Sibling" ~ "T",
TRUE~"F")) %>%
mutate(is_therapist = case_when(is_therapist == "Therapist" ~ "T",
TRUE~"F")) %>%
mutate(is_neighbour = case_when(is_neighbour == "Neighbour" ~ "T",
TRUE~"F")) %>%
mutate(is_family_friend = case_when(is_family_friend == "Family friend" ~ "T",
TRUE~"F")) %>%
mutate(is_other = case_when(is_other == "Other" ~ "T",
TRUE~"F")) %>%
count(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other, sort=T)
View(careg)
View(careg)
only_parents <- careg %>%
select(is_parent, n)
View(only_parents)
only_parents <- careg %>%
select(is_parent, n) %>%
filter (is_parent == "T")
View(only_parents)
#I have made 3 types of graphs so you can pick whatever suits better the poster
evidence <- x_2022_september_qualtrics_data %>%
select(how_helpful_evidence_based)
evidence_table<- as.data.frame(table(evidence$how_helpful_evidence_based))
evidence_table <- evidence_table %>%
mutate(percentage = (Freq/144)*100) %>%
mutate(percentage = round(percentage, digits=0)) %>%
mutate(helpfulness_level = Var1)
evi_plot <- ggplot(evidence_table, aes(x="", y=percentage, fill=helpfulness_level))+
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage evidence based helpfulness", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4"))+
theme_bw()
evi_plot
#Run this code only if you want to get the pie chart
evi_pie<- evi_plot + coord_polar("y", start=0) + theme_void()
evi_pie
# Run this code for side by side bars, probably we need to change the scale for y though!
evi_plot_col <- ggplot(evidence_table, aes(x=helpfulness_level, y=percentage, fill=helpfulness_level))+
geom_col() +
labs(y="percentage evidence based helpfulness", x="")+
geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage evidence based helpfulness", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4"))+
theme_bw()
evi_plot_col
View(only_parents)
sum(only_parents$n)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
#203
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164 39 excluded
filter(year_birth >=1922) %>% #2 more excluded
filter(recaptcha_score >=.80) %>% #1 more excluded
filter(consent=="I consent") #1 more excluded
#completion range
range(as.numeric(x_2022_september_qualtrics_data$progress)) #31-100 completed
average_pop <- x_2022_september_qualtrics_data %>%
select(progress)%>%
filter(progress!="100")
#average progress
mean(as.numeric(average_pop$progress))
table(average_pop$progress)
#average time spent in survey (take median as the better measure)
mean(as.numeric(x_2022_september_qualtrics_data$duration_s))
median(as.numeric(x_2022_september_qualtrics_data$duration_s))
table(x_2022_september_qualtrics_data$duration_s)
#Age range
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
mutate(survey_year = 2022) %>%
mutate(age = survey_year - as.numeric(year_birth))
range(x_2022_september_qualtrics_data$age) #19-63 years
mean(x_2022_september_qualtrics_data$age) #35.64 years
#Gender
sum(x_2022_september_qualtrics_data$gender=="Female", na.rm = T) #126 female
sum(x_2022_september_qualtrics_data$gender=="Male", na.rm = T)  # 31 male
sum(x_2022_september_qualtrics_data$gender=="Prefer not to answer", na.rm = T) #4
#NA = 1
>>>>>>> Stashed changes
country_table<- as.data.frame(table(x_2022_september_qualtrics_data$country))
print(country_table)
#I will make a png map with this info
#A. Percentage of caregivers
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other))  %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
mutate(is_grandparent = case_when(is_grandparent == "Grandparent" ~ "T",
TRUE~"F")) %>%
mutate(is_babysitter = case_when(is_babysitter == "Nanny/Babysitter" ~ "T",
TRUE~"F")) %>%
mutate(is_aunt_uncle = case_when(is_aunt_uncle == "Uncle/Aunt" ~ "T",
TRUE~"F"))%>%
mutate(is_sibling = case_when(is_sibling == "Sibling" ~ "T",
TRUE~"F")) %>%
mutate(is_therapist = case_when(is_therapist == "Therapist" ~ "T",
TRUE~"F")) %>%
mutate(is_neighbour = case_when(is_neighbour == "Neighbour" ~ "T",
TRUE~"F")) %>%
mutate(is_family_friend = case_when(is_family_friend == "Family friend" ~ "T",
TRUE~"F")) %>%
mutate(is_other = case_when(is_other == "Other" ~ "T",
TRUE~"F")) %>%
count(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other, sort=T)
only_parents <- careg %>%
select(is_parent, n) %>%
filter (is_parent == "T")
sum(only_parents$n)
visits<- x_2022_september_qualtrics_data %>%
select(visit_kotoboo)
visits_table<- as.data.frame(table(visits$visit_kotoboo))
visits_table<- visits_table %>%
mutate(percentage = (Freq/160)*100)
#I have made 3 types of graphs so you can pick whatever suits better the poster
evidence <- x_2022_september_qualtrics_data %>%
select(how_helpful_evidence_based)
evidence_table<- as.data.frame(table(evidence$how_helpful_evidence_based))
evidence_table <- evidence_table %>%
mutate(percentage = (Freq/144)*100) %>%
mutate(percentage = round(percentage, digits=0)) %>%
mutate(helpfulness_level = Var1)
evi_plot <- ggplot(evidence_table, aes(x="", y=percentage, fill=helpfulness_level))+
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage evidence based helpfulness", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4"))+
theme_bw()
evi_plot
#Run this code only if you want to get the pie chart
evi_pie<- evi_plot + coord_polar("y", start=0) + theme_void()
evi_pie
# Run this code for side by side bars, probably we need to change the scale for y though!
evi_plot_col <- ggplot(evidence_table, aes(x=helpfulness_level, y=percentage, fill=helpfulness_level))+
geom_col() +
labs(y="percentage evidence based helpfulness", x="")+
geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage evidence based helpfulness", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4"))+
theme_bw()
evi_plot_col
internet <- x_2022_september_qualtrics_data %>%
select(how_often_internet)
internet_table<- as.data.frame(table(internet$how_often_internet))
internet_table <- internet_table %>%
mutate(percentage = (Freq/142)*100) %>%
mutate(percentage = round(percentage, digits=0)) %>%
mutate(internet_search_frequency = Var1)
internet_plot <- ggplot(internet_table, aes(x="", y=percentage, fill=internet_search_frequency))+
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage internet search freq", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4",
"#ffc297",
"#f0aae5ff",
"#fff3b6",
"#a7ffd3ff",
"#a4d5eb"))+
theme_bw()
internet_plot
#Run this code only if you want to get the pie chart
internet_pie<- internet_plot + coord_polar("y", start=0) + theme_void()
internet_pie
mean_importance <- x_2022_september_qualtrics_data %>%
select(c("importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other"))%>%
pivot_longer(cols=c("importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other"),names_to = "characteristic", values_to= "rating")%>%
group_by(characteristic)%>%
mutate(rating = as.numeric(as.character(rating)))
mean_importance <- mean_importance %>%
mutate(characteristic = case_when(characteristic == "importance_concrete_advice" ~ "gives concrete advice",
characteristic == "importance_free" ~ "the content is free",
characteristic == "importance_easy_to_access" ~ "it's easy to access",
characteristic == "importance_understandable" ~ "content is understandable",
characteristic == "importance_engaging" ~ "content is engaging",
characteristic == "importance_EDI" ~ "fosters equity, diversity and inclusion",
characteristic == "importance_social_media" ~ "shareable in social media",
characteristic == "importance_reliable" ~ "the information is reliable",
characteristic == "importance_evidence_based" ~ "the content is evidence based",
characteristic == "importance_unpretentious" ~ "the content is unpretentious",
characteristic == "importance_respectful" ~ "the content is respectful",
characteristic == "importance_fun" ~ "the content is fun",
characteristic == "importance_unbiased" ~ "the content is unbiased",
characteristic == "importance_other" ~ "other reason not listed"))
plot<- mean_importance %>%
ungroup()%>%
group_by(characteristic)%>%
summarise(mean = mean(rating, na.rm=T))
plot<- plot %>%
mutate(characteristic = fct_reorder(plot$characteristic, plot$mean, .desc = T))
ggplot(plot, aes(y=characteristic, x=mean)) +
geom_point(size=5)+
theme_bw() +
labs(x="Importance Ranking 1-14", y="Feature")+
xlim(1, 14) +
annotate("text", y=1, x=3, label="most important <-", color="red") +
annotate("text", y=1, x=10, label="least important ->", color ="red")
by_topic <- x_2022_september_qualtrics_data %>%
select(which_topics_interest)%>%
drop_na() %>%
mutate ("language learning in bilingual and multilingual contexts" = case_when(str_detect(which_topics_interest,"Language learning in bilingual and multilingual contexts") ~ "1", TRUE ~ "0")) %>%
mutate ("the effect of screen time on language learning" = case_when(str_detect(which_topics_interest,"The effects of screen time on language learning") ~ "1", TRUE ~ "0")) %>%
mutate ("language diversity (differences and similarities of languages across the world)" = case_when(str_detect(which_topics_interest,"Language diversity") ~ "1", TRUE ~ "0")) %>%
mutate ("learning sign languages" = case_when(str_detect(which_topics_interest,"Learning sign languages") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to foster language learning" = case_when(str_detect(which_topics_interest,"Ways to foster language learning") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to develop reading/writing abilities" = case_when(str_detect(which_topics_interest,"Ways to develop reading") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to foster language learning in children with developmental disorders" = case_when(str_detect(which_topics_interest,"Ways to foster language learning in children with developmental disorders") ~ "1", TRUE ~ "0")) %>%
mutate ("debunking commonly believed myths" = case_when(str_detect(which_topics_interest,"Debunking commonly believed myths") ~ "1", TRUE ~ "0")) %>%
pivot_longer(cols = c("debunking commonly believed myths",
"ways to foster language learning in children with developmental disorders",
"ways to develop reading/writing abilities",
"ways to foster language learning",
"learning sign languages",
"language diversity (differences and similarities of languages across the world)",
"the effect of screen time on language learning",
"language learning in bilingual and multilingual contexts"),
names_to = "topic", values_to = "n") %>%
filter(n == "1") %>%
select(topic) %>%
group_by(topic) %>%
tally() %>%
mutate(percentage = (n/sum(n))*100) %>%
mutate(percentage = round(percentage, digits=0))
<<<<<<< Updated upstream
by_topic <- x_2022_september_qualtrics_data %>%
select(which_topics_interest)%>%
drop_na()
View(x_2022_september_qualtrics_data)
str(x_2022_september_qualtrics_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004)
203-164
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164
filter(year_birth >=1922)
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164
filter(year_birth >=1922) %>%
filter(consent=="I consent")
View(x_2022_september_qualtrics_data)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004)
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164 39 excluded
filter(year_birth >=1922)
#203
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164 39 excluded
filter(year_birth >=1922) %>% #2 more excluded
filter(recaptcha_score >=.80)
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164 39 excluded
filter(year_birth >=1922) %>% #2 more excluded
filter(recaptcha_score >=.80) %>% #1 more excluded
filter(consent=="I consent")
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other))  %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
mutate(is_grandparent = case_when(is_grandparent == "Grandparent" ~ "T",
TRUE~"F")) %>%
mutate(is_babysitter = case_when(is_babysitter == "Nanny/Babysitter" ~ "T",
TRUE~"F")) %>%
mutate(is_aunt_uncle = case_when(is_aunt_uncle == "Uncle/Aunt" ~ "T",
TRUE~"F"))%>%
mutate(is_sibling = case_when(is_sibling == "Sibling" ~ "T",
TRUE~"F")) %>%
mutate(is_therapist = case_when(is_therapist == "Therapist" ~ "T",
TRUE~"F")) %>%
mutate(is_neighbour = case_when(is_neighbour == "Neighbour" ~ "T",
TRUE~"F")) %>%
mutate(is_family_friend = case_when(is_family_friend == "Family friend" ~ "T",
TRUE~"F")) %>%
mutate(is_other = case_when(is_other == "Other" ~ "T",
TRUE~"F")) %>%
count(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other, sort=T)
View(careg)
View(careg)
only_parents <- careg %>%
select(is_parent, n)
View(only_parents)
only_parents <- careg %>%
select(is_parent, n) %>%
filter (is_parent == "T")
View(only_parents)
#I have made 3 types of graphs so you can pick whatever suits better the poster
evidence <- x_2022_september_qualtrics_data %>%
select(how_helpful_evidence_based)
evidence_table<- as.data.frame(table(evidence$how_helpful_evidence_based))
evidence_table <- evidence_table %>%
mutate(percentage = (Freq/144)*100) %>%
mutate(percentage = round(percentage, digits=0)) %>%
mutate(helpfulness_level = Var1)
evi_plot <- ggplot(evidence_table, aes(x="", y=percentage, fill=helpfulness_level))+
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage evidence based helpfulness", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4"))+
theme_bw()
evi_plot
#Run this code only if you want to get the pie chart
evi_pie<- evi_plot + coord_polar("y", start=0) + theme_void()
evi_pie
# Run this code for side by side bars, probably we need to change the scale for y though!
evi_plot_col <- ggplot(evidence_table, aes(x=helpfulness_level, y=percentage, fill=helpfulness_level))+
geom_col() +
labs(y="percentage evidence based helpfulness", x="")+
geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage evidence based helpfulness", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4"))+
theme_bw()
evi_plot_col
View(only_parents)
sum(only_parents$n)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
#203
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>% #164 39 excluded
filter(year_birth >=1922) %>% #2 more excluded
filter(recaptcha_score >=.80) %>% #1 more excluded
filter(consent=="I consent") #1 more excluded
#completion range
range(as.numeric(x_2022_september_qualtrics_data$progress)) #31-100 completed
View(x_2022_september_qualtrics_data)
count_helpfulness <- x_2022_september_qualtrics_data %>%
group_by(how_helpful_evidence_based) %>%
count(how_helpful_evidence_based)
View(count_helpfulness)
(104*3)+
(38*2)+3
391/3
3*104
38*2
312+76+3
3+38+104
391/145
count_internet <- x_2022_september_qualtrics_data %>%
group_by(how_often_internet) %>%
count(how_often_internet)
View(count_internet)
View(count_internet)
(27*5)+(22*4)+(46*3)+(38*2)+27
27+10+46+22+38+18
464/161
count_participation<- x_2022_september_qualtrics_data %>%
group_by(participate_in_science) %>%
count(participate_in_science)
View(count_participation)
(71*4)+(14*3)+(37*2)+1
37+1+14+71+38
401/161
?pivot_longer
by_topic <- x_2022_september_qualtrics_data %>%
select(which_topics_interest)%>%
drop_na() %>%
mutate ("language learning in bilingual and multilingual contexts" = case_when(str_detect(which_topics_interest,"Language learning in bilingual and multilingual contexts") ~ "1", TRUE ~ "0")) %>%
mutate ("the effect of screen time on language learning" = case_when(str_detect(which_topics_interest,"The effects of screen time on language learning") ~ "1", TRUE ~ "0")) %>%
mutate ("language diversity (differences and similarities of languages across the world)" = case_when(str_detect(which_topics_interest,"Language diversity") ~ "1", TRUE ~ "0")) %>%
mutate ("learning sign languages" = case_when(str_detect(which_topics_interest,"Learning sign languages") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to foster language learning" = case_when(str_detect(which_topics_interest,"Ways to foster language learning") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to develop reading/writing abilities" = case_when(str_detect(which_topics_interest,"Ways to develop reading") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to foster language learning in children with developmental disorders" = case_when(str_detect(which_topics_interest,"Ways to foster language learning in children with developmental disorders") ~ "1", TRUE ~ "0")) %>%
mutate ("debunking commonly believed myths" = case_when(str_detect(which_topics_interest,"Debunking commonly believed myths") ~ "1", TRUE ~ "0")) %>%
pivot_longer(cols = c("debunking commonly believed myths",
"ways to foster language learning in children with developmental disorders",
"ways to develop reading/writing abilities",
"ways to foster language learning",
"learning sign languages",
"language diversity (differences and similarities of languages across the world)",
"the effect of screen time on language learning",
"language learning in bilingual and multilingual contexts"),
names_to = "topic", values_to = "n") %>%
filter(n == "1") %>%
select(topic) %>%
group_by(topic) %>%
count(topic)
by_topic <- x_2022_september_qualtrics_data %>%
select(which_topics_interest)%>%
drop_na() %>%
mutate ("language learning in bilingual and multilingual contexts" = case_when(str_detect(which_topics_interest,"Language learning in bilingual and multilingual contexts") ~ "1", TRUE ~ "0")) %>%
mutate ("the effect of screen time on language learning" = case_when(str_detect(which_topics_interest,"The effects of screen time on language learning") ~ "1", TRUE ~ "0")) %>%
mutate ("language diversity (differences and similarities of languages across the world)" = case_when(str_detect(which_topics_interest,"Language diversity") ~ "1", TRUE ~ "0")) %>%
mutate ("learning sign languages" = case_when(str_detect(which_topics_interest,"Learning sign languages") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to foster language learning" = case_when(str_detect(which_topics_interest,"Ways to foster language learning") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to develop reading/writing abilities" = case_when(str_detect(which_topics_interest,"Ways to develop reading") ~ "1", TRUE ~ "0")) %>%
mutate ("ways to foster language learning in children with developmental disorders" = case_when(str_detect(which_topics_interest,"Ways to foster language learning in children with developmental disorders") ~ "1", TRUE ~ "0")) %>%
mutate ("debunking commonly believed myths" = case_when(str_detect(which_topics_interest,"Debunking commonly believed myths") ~ "1", TRUE ~ "0")) %>%
pivot_longer(cols = c("debunking commonly believed myths",
"ways to foster language learning in children with developmental disorders",
"ways to develop reading/writing abilities",
"ways to foster language learning",
"learning sign languages",
"language diversity (differences and similarities of languages across the world)",
"the effect of screen time on language learning",
"language learning in bilingual and multilingual contexts"),
names_to = "topic", values_to = "n")
by_topic <- x_2022_september_qualtrics_data %>%
mutate(which_topics_bilingualism = case_when( which_topics_bilingualism=="NA" ~ 0,
TRUE ~1))
View(by_topic)
by_topic <- x_2022_september_qualtrics_data %>%
mutate(which_topics_bilingualism = case_when( which_topics_bilingualism==NA ~ 0,
TRUE ~1))
View(by_topic)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
by_topic <- x_2022_september_qualtrics_data %>%
mutate(which_topics_bilingualism = case_when( which_topics_bilingualism=NA ~ 0,
TRUE ~1))
View(by_topic)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))
View(by_topic)
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(0)
topics <- c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters)
topics <- c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
topics <- c("which_topics_bilingualism", "which_topics_screen_time", "which_topics_lang_diversity", "which_topics_sign_langauge", "which_topics_foster_language", "which_topics_reading_writing", "which_topics_langauge_dev_disorders", "which_topics_mythbusters")
by_topic <- x_2022_september_qualtrics_data %>%
select(topics)%>%
replace_na(topics, 0)
select(all_of(topics))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters)= 0)
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters)= 0))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list = 0))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = 0))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (as.doube(which_topics_bilingualism) = 0))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0"))
View(by_topic)
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (c(which_topics_bilingualism, which_topics_screen_time) = "0")))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
#replace_na(list (which_topics_bilingualism = "0"))
drop_na()
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0"))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0")) %>%
replace_na(list (which_topics_screen_time = "0")) %>%
replace_na(list (which_topics_lang_diversity = "0")) %>%
replace_na(list (which_topics_sign_langauge = "0")) %>%
replace_na(list ( which_topics_foster_language ="0")) %>%
replace_na(list (which_topics_reading_writing = "0")) %>%
replace_na(list(which_topics_langauge_dev_disorders ="0")) %>%
replace_na(list(which_topics_mythbusters ="0"))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0")) %>%
replace_na(list (which_topics_screen_time = "0")) %>%
replace_na(list (which_topics_lang_diversity = "0")) %>%
replace_na(list (which_topics_sign_langauge = "0")) %>%
replace_na(list (which_topics_foster_language ="0")) %>%
replace_na(list (which_topics_reading_writing = "0")) %>%
replace_na(list(which_topics_langauge_dev_disorders ="0")) %>%
replace_na(list(which_topics_mythbusters ="0")) %>%
mutate(which_topics_bilingualism = case_when( which_topics_bilingualism=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_screen_time = case_when( which_topics_screen_time=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_lang_diversity = case_when( which_topics_lang_diversity=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_sign_langauge = case_when( which_topics_sign_langauge =="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_foster_language = case_when(which_topics_foster_language=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_reading_writing = case_when( which_topics_reading_writing=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_langauge_dev_disorders= case_when( which_topics_langauge_dev_disorders=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_mythbusters = case_when( which_topics_mythbusters=="0" ~ 0,
TRUE ~1)) %>%
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0")) %>%
replace_na(list (which_topics_screen_time = "0")) %>%
replace_na(list (which_topics_lang_diversity = "0")) %>%
replace_na(list (which_topics_sign_langauge = "0")) %>%
replace_na(list (which_topics_foster_language ="0")) %>%
replace_na(list (which_topics_reading_writing = "0")) %>%
replace_na(list(which_topics_langauge_dev_disorders ="0")) %>%
replace_na(list(which_topics_mythbusters ="0")) %>%
mutate(which_topics_bilingualism = case_when( which_topics_bilingualism=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_screen_time = case_when( which_topics_screen_time=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_lang_diversity = case_when( which_topics_lang_diversity=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_sign_langauge = case_when( which_topics_sign_langauge =="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_foster_language = case_when(which_topics_foster_language=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_reading_writing = case_when( which_topics_reading_writing=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_langauge_dev_disorders= case_when( which_topics_langauge_dev_disorders=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_mythbusters = case_when( which_topics_mythbusters=="0" ~ 0,
TRUE ~1))
View(by_topic)
topic_sums<- colSums(by_topic)
topic_sums<- as.data.frame(colSums(by_topic))
View(topic_sums)
=======
# find the top-3 and bottom-3 features (with top_1 = most important, and bottom_1 = least important)
feature_top_1 <- mean_feature_rating %>%
filter(mean_rating == min(mean_rating))
data_feature <- x_2022_september_qualtrics_data %>%
## select relevant variables
select(response_id, starts_with("importance_"), -starts_with("importance_other")) %>%
## transpose data frame
pivot_longer(-response_id, names_to = "feature", values_to = "rating") %>%
mutate(feature = as.factor(feature),
rating = as.numeric(rating)) %>%
## recode feature levels
mutate(feature = recode(feature,
"importance_concrete_advice" = "gives concrete advice",
"importance_free" = "the content is free",
"importance_easy_to_access" = "it's easy to access",
"importance_understandable" = "content is understandable",
"importance_engaging" = "content is engaging",
"importance_EDI" = "fosters equity, diversity and inclusion",
"importance_social_media" = "shareable in social media",
"importance_reliable" = "the information is reliable",
"importance_evidence_based" = "the content is evidence based",
"importance_unpretentious" = "the content is unpretentious",
"importance_respectful" = "the content is respectful",
"importance_fun" = "the content is fun",
"importance_unbiased" = "the content is unbiased"))
# visualize all variables by number of participants voted per feature
plot_feature_all <- data_feature %>%
count(rating, feature) %>% # count combos of rating & feature
ggplot(aes(x = rating, y = n, fill = feature)) +
geom_col(position = "fill") +
theme_minimal() +
scale_x_continuous(breaks=seq(1, 14, 1)) +
labs(x = "Rating (with 1 being the most important)",
y = "Proportion of participants",
fill = "Feature")
plot_feature_per_feature <- data_feature %>%
count(rating, feature) %>%
group_by(rating) %>%
mutate(rating = as.factor(rating),
#sum = sum(n),
prop = n/161) %>%
ungroup() %>%
#filter(!is.na(rating)) %>%
ggplot(aes(x = reorder(feature, prop),
y = prop,
fill = rating)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
coord_flip()
# calculate mean rating per features
mean_feature_rating <- data_feature %>%
## calculate mean rating per feature
group_by(feature) %>%
summarize(n = n(),
mean_rating = mean(rating, na.rm=T)) %>%
arrange(mean_rating) %>% # sort by ascending order as the smaller value indicates greater importance
ungroup()
plot_mean_feature_rating <- mean_feature_rating %>%
ggplot(aes(x = reorder(feature, -mean_rating), y = mean_rating)) +
geom_point(size = 5) +
theme_minimal() +
scale_y_continuous(limits = c(1, 14), breaks = seq(1, 14, by = 1)) +
labs(x = "Feature",
y = "Importance rating averaged across participants") +
coord_flip() +
annotate("text", x=1, y=2, label="most important ←", color="red") +
annotate("text", x=1, y=13, label="→ least important", color ="red")
# find the top-3 and bottom-3 features (with top_1 = most important, and bottom_1 = least important)
feature_top_1 <- mean_feature_rating %>%
filter(mean_rating == min(mean_rating))
feature_top_2 <- mean_feature_rating %>%
filter(rank(mean_rating, ties.method = "min") == 2)
feature_top_3 <- mean_feature_rating %>%
filter(rank(mean_rating, ties.method = "min") == 3)
feature_top_4 <- mean_feature_rating %>%
filter(rank(mean_rating, ties.method = "min") == 4)
feature_top_5 <- mean_feature_rating %>%
filter(rank(mean_rating, ties.method = "min") == 5)
# Bottom-1 feature
feature_bottom_1 <- mean_feature_rating %>%
filter(mean_rating == max(mean_rating))
feature_bottom_2 <- mean_feature_rating %>%
filter(rank(-mean_rating, ties.method = "min") == 2)
feature_bottom_3 <- mean_feature_rating %>%
filter(rank(-mean_rating, ties.method = "min") == 3)
# ---- kendall (for ordinal data; cannot run on individual items?) ----
data_feature_overall <- data_feature %>%
filter(!is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating)
irr::kendall(data_feature_overall %>% select(-feature), correct = FALSE) # The W estimate of 0.358 indicates a moderate effect
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating)
View(data_feature_top)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(across(where(is.numeric), >=3 ~ 1))
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(across(where(is.numeric), ~(list >=3 ~ 1)))
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, < 3, 1)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, <=3, 1)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric & <3, 1)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, funs(ifelse(<=3, 1, 0)))
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, funs(ifelse(.<=3, 1, 0)))
data_feature_top2 <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, funs(ifelse(.<=3, 1, 0)))
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating)
View(data_feature_top2)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, funs(ifelse(.<=3, 1, 0)))
irr::kendall(data_feature_top %>% select(-feature), correct = FALSE) # The W estimate of 0.295 indicates a small effect
irr::agree(data_feature_top)
irr::N.cohen.kappa(data_feature_bottom %>% select(-feature))
irr::N.cohen.kappa(data_feature_top %>% select(-feature))
irr::kappam.fleiss(data_feature_top %>% select(-feature))
>>>>>>> Stashed changes
