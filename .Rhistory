filter(consent=="I consent")
#completion range
range(as.numeric(x_2022_june_qualtrics_data$progress)) #31-100 completed
#First we will need dummy variables and to make internet use into a binary variable (yes or no).
library(fastDummies)
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania",
country== c("Belarus"|"Denmark"| "France" |"Germany" |"Ireland"| "Portugal"| "Russian Federation"| "Sweden"| "United Kingdom of Great Britain and Northen Ireland") ~ "Europe",
country == c("Brazil"| "Canada"| "Chile" |"Colombia"| "Mexico" |"Panama" |"Peru" |"United States of America")~"America",
country== c("China" |"Hong Kong (S.A.R.)"| "Japan"| "Singapore") ~ "Asia",
TRUE~"Not specified"))
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania",
country== c("Belarus"|"Denmark"| "France" |"Germany" |"Ireland"| "Portugal"| "Russian Federation"| "Sweden"| "United Kingdom of Great Britain and Northen Ireland") ~ "Europe"
View(x_2022_june_qualtrics_data)
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania",
country %in% ("Belarus"|"Denmark"| "France" |"Germany" |"Ireland"| "Portugal"| "Russian Federation"| "Sweden"| "United Kingdom of Great Britain and Northen Ireland") ~ "Europe"
lm1<- x_2022_june_qualtrics_data %>%
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
x_2022_june_qualtrics_data <- read_excel("2022_june_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "status", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "caregiver_type","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_interest","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_june_qualtrics_data<- x_2022_june_qualtrics_data [-c(1,2,3,4),]
library(fastDummies)
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania",
country %in% ("Belarus","Denmark","France","Germany","Ireland","Portugal","Russian Federation","Sweden", "United Kingdom of Great Britain and Northen Ireland") ~ "Europe",
#First we will need dummy variables and to make internet use into a binary variable (yes or no).
library(fastDummies)
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania",
country %in% ("Belarus","Denmark","France","Germany","Ireland","Portugal","Russian Federation","Sweden", "United Kingdom of Great Britain and Northen Ireland") ~ "Europe",
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania"))
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania",
country %in% c("Belarus","Denmark","France","Germany","Ireland","Portugal","Russian Federation","Sweden", "United Kingdom of Great Britain and Northen Ireland") ~ "Europe",
country %in% c("Brazil","Canada","Chile","Colombia","Mexico","Panama","Peru","United States of America")~"America",
country %in% c("China","Hong Kong (S.A.R.)","Japan","Singapore") ~ "Asia",
TRUE~"Not specified"))
View(lm1)
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania",
country %in% c("Belarus","Denmark","France","Germany","Ireland","Portugal","Russian Federation","Sweden", "United Kingdom of Great Britain and Northen Ireland") ~ "Europe",
country %in% c("Brazil","Canada","Chile","Colombia","Mexico","Panama","Peru","United States of America")~"America",
country %in% c("China","Hong Kong (S.A.R.)","Japan","Singapore") ~ "Asia",
TRUE~"Not specified")) %>%
dummy_cols(select_columns = "gender", ignore_na = T) %>%
dummy_cols(select_columns = "continent", ignore_na = T) %>%
lm1<- clean_names(lm1)
lm1<- x_2022_june_qualtrics_data %>%
mutate(internet_usage = case_when(str_detect(how_often_internet, "Frequently") ~1,
str_detect(how_often_internet, "Often")~1,
str_detect(how_often_internet, "Occasionally")~1,
TRUE~0)) %>%
mutate(continent = case_when(country == "Australia" ~"Oceania",
country %in% c("Belarus","Denmark","France","Germany","Ireland","Portugal","Russian Federation","Sweden", "United Kingdom of Great Britain and Northen Ireland") ~ "Europe",
country %in% c("Brazil","Canada","Chile","Colombia","Mexico","Panama","Peru","United States of America")~"America",
country %in% c("China","Hong Kong (S.A.R.)","Japan","Singapore") ~ "Asia",
TRUE~"Not specified")) %>%
dummy_cols(select_columns = "gender", ignore_na = T) %>%
dummy_cols(select_columns = "continent", ignore_na = T)
lm1<- clean_names(lm1)
View(lm1)
ggplot(lm1, aes(x=gender_female, y=internet_usage))+
geom_boxplot()
ggplot(lm1, aes(x=gender, y=internet_usage))+
geom_boxplot()
ggplot(lm1, aes(x=gender, y=internet_usage, na.rm=T))+
geom_boxplot()
#boxplots to visually demonstrate changes by gender and continent
ggplot(lm1, aes(x=gender, y=internet_usage))+
geom_boxplot(na.rm=T)
lm1<- clean_names(lm1) %>%
filter(!is.na(gender))
ggplot(lm1, aes(x=gender, y=internet_usage))+
geom_boxplot(na.rm=T)
lm1<- clean_names(lm1) %>%
filter(!is.na(gender)) %>%
filter(!is.na(continent))
ggplot(lm1, aes(x=gender, y=internet_usage))+
geom_boxplot(na.rm=T)
ggplot(lm1, aes(x=continent, y=internet_usage))+
geom_boxplot(na.rm=T)
i2<- glm(internet_usage ~ continent_america, data=lm1, family = "binomial")
summary(i2)
View(x_2022_june_qualtrics_data)
View(lm1)
cor<- lm1 %>%
select(internet_usage, importance_concrete_advice, importance_free, importance_easy_to_access, importance_understandable, importance_engaging, importance_edi, importance_fun, importance_reliable, importance_social_media, importance_evidence_based, importance_unpretentious, importance_other, importance_respectful, importance_unbiased)
mat<- cor(cor)
head(cor)
cor<- lm1 %>%
select(internet_usage, importance_concrete_advice, importance_free, importance_easy_to_access, importance_understandable, importance_engaging, importance_edi, importance_fun, importance_reliable, importance_social_media, importance_evidence_based, importance_unpretentious, importance_other, importance_respectful, importance_unbiased) %>%
mutate(as.numeric(as.character(c(importance_concrete_advice, importance_free, importance_easy_to_access, importance_understandable, importance_engaging, importance_edi, importance_fun, importance_reliable, importance_social_media, importance_evidence_based, importance_unpretentious, importance_other, importance_respectful, importance_unbiased))))
cor<- lm1 %>%
select(internet_usage, importance_concrete_advice, importance_free, importance_easy_to_access, importance_understandable, importance_engaging, importance_edi, importance_fun, importance_reliable, importance_social_media, importance_evidence_based, importance_unpretentious, importance_other, importance_respectful, importance_unbiased) %>%
mutate(as.numeric(as.character(importance_concrete_advice, )))
cor<- lm1 %>%
select(internet_usage, importance_concrete_advice, importance_free, importance_easy_to_access, importance_understandable, importance_engaging, importance_edi, importance_fun, importance_reliable, importance_social_media, importance_evidence_based, importance_unpretentious, importance_other, importance_respectful, importance_unbiased) %>%
mutate(importance_concreta_advice = as.numeric(as.character(importance_concrete_advice, )))
cor<- lm1 %>%
select(internet_usage, importance_concrete_advice, importance_free, importance_easy_to_access, importance_understandable, importance_engaging, importance_edi, importance_fun, importance_reliable, importance_social_media, importance_evidence_based, importance_unpretentious, importance_other, importance_respectful, importance_unbiased) %>%
mutate(importance_concreta_advice = as.numeric(as.character(importance_concrete_advice )))
cor<- lm1 %>%
select(internet_usage, importance_concrete_advice, importance_free, importance_easy_to_access, importance_understandable, importance_engaging, importance_edi, importance_fun, importance_reliable, importance_social_media, importance_evidence_based, importance_unpretentious, importance_other, importance_respectful, importance_unbiased) %>%
lapply(as.numeric)
head(cor)
View(cor)
mat<- cor(cor)
View(cor)
cor<- lm1 %>%
select(internet_usage, importance_concrete_advice, importance_free, importance_easy_to_access, importance_understandable, importance_engaging, importance_edi, importance_fun, importance_reliable, importance_social_media, importance_evidence_based, importance_unpretentious, importance_other, importance_respectful, importance_unbiased)
cor<- as.data.frame(lapply(cor, as.numeric))
View(cor)
head(cor)
mat<- cor(cor)
round(mat,2)
mat<- cor(cor, method="pearson", use="complete.obs")
round(mat,2)
res_corr <- as.data.frame(round(mat,2))
View(res_corr)
View(res_corr)
View(x_2022_may_qualtrics_data)
View(x_2022_may_qualtrics_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
x_2022_june_qualtrics_data <- read_excel("2022_june_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "status", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "caregiver_type","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_interest","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_june_qualtrics_data<- x_2022_june_qualtrics_data [-c(1,2,3,4),]
x_2022_june_qualtrics_data<- x_2022_june_qualtrics_data %>%
filter(year_birth <=2004) %>%
filter(year_birth >=1922) %>%
filter(consent=="I consent")
#completion range
range(as.numeric(x_2022_june_qualtrics_data$progress)) #31-100 completed
average_pop <- x_2022_june_qualtrics_data %>%
select(progress)%>%
filter(progress!="100")
#average progress
mean(as.numeric(average_pop$progress))
table(average_pop$progress)
#average time spent in survey (take median as the better measure)
mean(as.numeric(x_2022_june_qualtrics_data$duration_s))
median(as.numeric(x_2022_june_qualtrics_data$duration_s))
table(x_2022_june_qualtrics_data$duration_s)
#Age range
x_2022_june_qualtrics_data <- x_2022_june_qualtrics_data %>%
mutate(survey_year = 2022) %>%
mutate(age = survey_year - as.numeric(year_birth))
range(x_2022_june_qualtrics_data$age) #19-63 years
mean(x_2022_june_qualtrics_data$age) #35.58 years
#Gender
sum(x_2022_june_qualtrics_data$gender=="Female", na.rm = T) #123 female
sum(x_2022_june_qualtrics_data$gender=="Male", na.rm = T)  # 32 male
sum(x_2022_june_qualtrics_data$gender=="Prefer not to answer", na.rm = T) #4
#NA = 1
country_table<- as.data.frame(table(x_2022_june_qualtrics_data$country))
#I will make a png map with this info
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y=percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
visits<- x_2022_june_qualtrics_data %>%
select(visit_kotoboo)
visits_table<- as.data.frame(table(visits$visit_kotoboo))
visits_table<- visits_table %>%
mutate(percentage = (Freq/160)*100)
#I have made 3 types of graphs so you can pick whatever suits better the poster
evidence <- x_2022_june_qualtrics_data %>%
select(how_helpful_evidence_based)
evidence_table<- as.data.frame(table(evidence$how_helpful_evidence_based))
evidence_table <- evidence_table %>%
mutate(percentage = (Freq/144)*100) %>%
mutate(percentage = round(percentage, digits=0)) %>%
mutate(helpfulness_level = Var1)
evi_plot <- ggplot(evidence_table, aes(x="", y=percentage, fill=helpfulness_level))+
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage evidence based helpfulness", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4"))+
theme_bw()
evi_plot
#Run this code only if you want to get the pie chart
evi_pie<- evi_plot + coord_polar("y", start=0) + theme_void()
evi_pie
# Run this code for side by side bars, probably we need to change the scale for y though!
evi_plot_col <- ggplot(evidence_table, aes(x=helpfulness_level, y=percentage, fill=helpfulness_level))+
geom_col() +
labs(y="percentage evidence based helpfulness", x="")+
geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage evidence based helpfulness", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4"))+
theme_bw()
evi_plot_col
internet <- x_2022_june_qualtrics_data %>%
select(how_often_internet)
internet_table<- as.data.frame(table(internet$how_often_internet))
internet_table <- internet_table %>%
mutate(percentage = (Freq/142)*100) %>%
mutate(percentage = round(percentage, digits=0)) %>%
mutate(internet_search_frequency = Var1)
internet_plot <- ggplot(internet_table, aes(x="", y=percentage, fill=internet_search_frequency))+
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage internet search freq", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4",
"#ffc297",
"#f0aae5ff",
"#fff3b6",
"#a7ffd3ff",
"#a4d5eb"))+
theme_bw()
internet_plot
#Run this code only if you want to get the pie chart
internet_pie<- internet_plot + coord_polar("y", start=0) + theme_void()
internet_pie
mean_importance <- x_2022_june_qualtrics_data %>%
select(c("importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other"))%>%
pivot_longer(cols=c("importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other"),names_to = "characteristic", values_to= "rating")%>%
group_by(characteristic)%>%
mutate(rating = as.numeric(as.character(rating)))
mean_importance <- mean_importance %>%
mutate(characteristic = case_when(characteristic == "importance_concrete_advice" ~ "gives concrete advice",
characteristic == "importance_free" ~ "the content is free",
characteristic == "importance_easy_to_access" ~ "it's easy to access",
characteristic == "importance_understandable" ~ "content is understandable",
characteristic == "importance_engaging" ~ "content is engaging",
characteristic == "importance_EDI" ~ "fosters equity, diversity and inclusion",
characteristic == "importance_social_media" ~ "shareable in social media",
characteristic == "importance_reliable" ~ "the information is reliable",
characteristic == "importance_evidence_based" ~ "the content is evidence based",
characteristic == "importance_unpretentious" ~ "the content is unpretentious",
characteristic == "importance_respectful" ~ "the content is respectful",
characteristic == "importance_fun" ~ "the content is fun",
characteristic == "importance_unbiased" ~ "the content is unbiased",
characteristic == "importance_other" ~ "other reason not listed"))
plot<- mean_importance %>%
ungroup()%>%
group_by(characteristic)%>%
summarise(mean = mean(rating, na.rm=T))
plot<- plot %>%
mutate(characteristic = fct_reorder(plot$characteristic, plot$mean, .desc = T))
ggplot(plot, aes(y=characteristic, x=mean)) +
geom_point(size=5)+
theme_bw() +
labs(x="Importance Ranking 1-14", y="Feature")+
xlim(1, 14) +
annotate("text", y=1, x=3, label="most important <-", color="red") +
annotate("text", y=1, x=10, label="least important ->", color ="red")
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y=percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage, label= scales::percent(pct)),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y=percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage, label= scales::percent(percentage)),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y=percentage, fill=`respondent was a parent`, label= scales::percent(percentage)))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= scales::percent(percentage), fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = scales::percent(percentage)),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = scales::percent(percentage)),
position = position_stack(vjust = 0.5), show.legend = F)+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
View(careg_table)
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = scales::percent(Freq)),
position = position_stack(vjust = 0.5), show.legend = F)+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage, %),
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage, "%"),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
country_table<- as.data.frame(table(x_2022_june_qualtrics_data$country))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
country_table<- as.data.frame(table(x_2022_june_qualtrics_data$country))
x_2022_june_qualtrics_data <- read_excel("2022_june_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "status", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "caregiver_type","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_interest","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_june_qualtrics_data<- x_2022_june_qualtrics_data [-c(1,2,3,4),]
country_table<- as.data.frame(table(x_2022_june_qualtrics_data$country))
#I will make a png map with this info
View(country_table)
