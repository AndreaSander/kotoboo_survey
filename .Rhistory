topics <- c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
topics <- c("which_topics_bilingualism", "which_topics_screen_time", "which_topics_lang_diversity", "which_topics_sign_langauge", "which_topics_foster_language", "which_topics_reading_writing", "which_topics_langauge_dev_disorders", "which_topics_mythbusters")
by_topic <- x_2022_september_qualtrics_data %>%
select(topics)%>%
replace_na(topics, 0)
select(all_of(topics))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters)= 0)
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters)= 0))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list = 0))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = 0))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (as.doube(which_topics_bilingualism) = 0))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0"))
View(by_topic)
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (c(which_topics_bilingualism, which_topics_screen_time) = "0")))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
#replace_na(list (which_topics_bilingualism = "0"))
drop_na()
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0"))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0")) %>%
replace_na(list (which_topics_screen_time = "0")) %>%
replace_na(list (which_topics_lang_diversity = "0")) %>%
replace_na(list (which_topics_sign_langauge = "0")) %>%
replace_na(list ( which_topics_foster_language ="0")) %>%
replace_na(list (which_topics_reading_writing = "0")) %>%
replace_na(list(which_topics_langauge_dev_disorders ="0")) %>%
replace_na(list(which_topics_mythbusters ="0"))
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0")) %>%
replace_na(list (which_topics_screen_time = "0")) %>%
replace_na(list (which_topics_lang_diversity = "0")) %>%
replace_na(list (which_topics_sign_langauge = "0")) %>%
replace_na(list (which_topics_foster_language ="0")) %>%
replace_na(list (which_topics_reading_writing = "0")) %>%
replace_na(list(which_topics_langauge_dev_disorders ="0")) %>%
replace_na(list(which_topics_mythbusters ="0")) %>%
mutate(which_topics_bilingualism = case_when( which_topics_bilingualism=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_screen_time = case_when( which_topics_screen_time=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_lang_diversity = case_when( which_topics_lang_diversity=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_sign_langauge = case_when( which_topics_sign_langauge =="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_foster_language = case_when(which_topics_foster_language=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_reading_writing = case_when( which_topics_reading_writing=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_langauge_dev_disorders= case_when( which_topics_langauge_dev_disorders=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_mythbusters = case_when( which_topics_mythbusters=="0" ~ 0,
TRUE ~1)) %>%
by_topic <- x_2022_september_qualtrics_data %>%
select(c(which_topics_bilingualism, which_topics_screen_time, which_topics_lang_diversity, which_topics_sign_langauge, which_topics_foster_language, which_topics_reading_writing, which_topics_langauge_dev_disorders, which_topics_mythbusters))%>%
replace_na(list (which_topics_bilingualism = "0")) %>%
replace_na(list (which_topics_screen_time = "0")) %>%
replace_na(list (which_topics_lang_diversity = "0")) %>%
replace_na(list (which_topics_sign_langauge = "0")) %>%
replace_na(list (which_topics_foster_language ="0")) %>%
replace_na(list (which_topics_reading_writing = "0")) %>%
replace_na(list(which_topics_langauge_dev_disorders ="0")) %>%
replace_na(list(which_topics_mythbusters ="0")) %>%
mutate(which_topics_bilingualism = case_when( which_topics_bilingualism=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_screen_time = case_when( which_topics_screen_time=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_lang_diversity = case_when( which_topics_lang_diversity=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_sign_langauge = case_when( which_topics_sign_langauge =="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_foster_language = case_when(which_topics_foster_language=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_reading_writing = case_when( which_topics_reading_writing=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_langauge_dev_disorders= case_when( which_topics_langauge_dev_disorders=="0" ~ 0,
TRUE ~1)) %>%
mutate(which_topics_mythbusters = case_when( which_topics_mythbusters=="0" ~ 0,
TRUE ~1))
View(by_topic)
topic_sums<- colSums(by_topic)
topic_sums<- as.data.frame(colSums(by_topic))
View(topic_sums)
=======
# find the top-3 and bottom-3 features (with top_1 = most important, and bottom_1 = least important)
feature_top_1 <- mean_feature_rating %>%
filter(mean_rating == min(mean_rating))
data_feature <- x_2022_september_qualtrics_data %>%
## select relevant variables
select(response_id, starts_with("importance_"), -starts_with("importance_other")) %>%
## transpose data frame
pivot_longer(-response_id, names_to = "feature", values_to = "rating") %>%
mutate(feature = as.factor(feature),
rating = as.numeric(rating)) %>%
## recode feature levels
mutate(feature = recode(feature,
"importance_concrete_advice" = "gives concrete advice",
"importance_free" = "the content is free",
"importance_easy_to_access" = "it's easy to access",
"importance_understandable" = "content is understandable",
"importance_engaging" = "content is engaging",
"importance_EDI" = "fosters equity, diversity and inclusion",
"importance_social_media" = "shareable in social media",
"importance_reliable" = "the information is reliable",
"importance_evidence_based" = "the content is evidence based",
"importance_unpretentious" = "the content is unpretentious",
"importance_respectful" = "the content is respectful",
"importance_fun" = "the content is fun",
"importance_unbiased" = "the content is unbiased"))
# visualize all variables by number of participants voted per feature
plot_feature_all <- data_feature %>%
count(rating, feature) %>% # count combos of rating & feature
ggplot(aes(x = rating, y = n, fill = feature)) +
geom_col(position = "fill") +
theme_minimal() +
scale_x_continuous(breaks=seq(1, 14, 1)) +
labs(x = "Rating (with 1 being the most important)",
y = "Proportion of participants",
fill = "Feature")
plot_feature_per_feature <- data_feature %>%
count(rating, feature) %>%
group_by(rating) %>%
mutate(rating = as.factor(rating),
#sum = sum(n),
prop = n/161) %>%
ungroup() %>%
#filter(!is.na(rating)) %>%
ggplot(aes(x = reorder(feature, prop),
y = prop,
fill = rating)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
coord_flip()
# calculate mean rating per features
mean_feature_rating <- data_feature %>%
## calculate mean rating per feature
group_by(feature) %>%
summarize(n = n(),
mean_rating = mean(rating, na.rm=T)) %>%
arrange(mean_rating) %>% # sort by ascending order as the smaller value indicates greater importance
ungroup()
plot_mean_feature_rating <- mean_feature_rating %>%
ggplot(aes(x = reorder(feature, -mean_rating), y = mean_rating)) +
geom_point(size = 5) +
theme_minimal() +
scale_y_continuous(limits = c(1, 14), breaks = seq(1, 14, by = 1)) +
labs(x = "Feature",
y = "Importance rating averaged across participants") +
coord_flip() +
annotate("text", x=1, y=2, label="most important ←", color="red") +
annotate("text", x=1, y=13, label="→ least important", color ="red")
# find the top-3 and bottom-3 features (with top_1 = most important, and bottom_1 = least important)
feature_top_1 <- mean_feature_rating %>%
filter(mean_rating == min(mean_rating))
feature_top_2 <- mean_feature_rating %>%
filter(rank(mean_rating, ties.method = "min") == 2)
feature_top_3 <- mean_feature_rating %>%
filter(rank(mean_rating, ties.method = "min") == 3)
feature_top_4 <- mean_feature_rating %>%
filter(rank(mean_rating, ties.method = "min") == 4)
feature_top_5 <- mean_feature_rating %>%
filter(rank(mean_rating, ties.method = "min") == 5)
# Bottom-1 feature
feature_bottom_1 <- mean_feature_rating %>%
filter(mean_rating == max(mean_rating))
feature_bottom_2 <- mean_feature_rating %>%
filter(rank(-mean_rating, ties.method = "min") == 2)
feature_bottom_3 <- mean_feature_rating %>%
filter(rank(-mean_rating, ties.method = "min") == 3)
# ---- kendall (for ordinal data; cannot run on individual items?) ----
data_feature_overall <- data_feature %>%
filter(!is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating)
irr::kendall(data_feature_overall %>% select(-feature), correct = FALSE) # The W estimate of 0.358 indicates a moderate effect
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating)
View(data_feature_top)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(across(where(is.numeric), >=3 ~ 1))
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(across(where(is.numeric), ~(list >=3 ~ 1)))
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, < 3, 1)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, <=3, 1)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric & <3, 1)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, funs(ifelse(<=3, 1, 0)))
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, funs(ifelse(.<=3, 1, 0)))
data_feature_top2 <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, funs(ifelse(.<=3, 1, 0)))
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating)
View(data_feature_top2)
data_feature_top <- data_feature %>%
filter(feature == feature_top_1$feature & !is.na(rating) |
feature == feature_top_2$feature & !is.na(rating) |
feature == feature_top_3$feature & !is.na(rating)) %>%
pivot_wider(id_cols = feature, names_from = response_id, values_from = rating) %>%
# new analysis
mutate_if(is.numeric, funs(ifelse(.<=3, 1, 0)))
irr::kendall(data_feature_top %>% select(-feature), correct = FALSE) # The W estimate of 0.295 indicates a small effect
irr::agree(data_feature_top)
irr::N.cohen.kappa(data_feature_bottom %>% select(-feature))
irr::N.cohen.kappa(data_feature_top %>% select(-feature))
irr::kappam.fleiss(data_feature_top %>% select(-feature))
>>>>>>> Stashed changes
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
library(lme4)
library(lmerTest)
library(ggplot2)
#library(tidylog)
#function for finding mode
find_mode <- function(x) {
u <- unique(x)
tab <- tabulate(match(x, u))
u[tab == max(tab)]
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
library(lme4)
library(lmerTest)
library(ggplot2)
#library(tidylog)
#function for finding mode
find_mode <- function(x) {
u <- unique(x)
tab <- tabulate(match(x, u))
u[tab == max(tab)]
}
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
str(x_2022_september_qualtrics_data)
#203 (n of pre-exclusion)
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
filter(recaptcha_score >=.80) %>% #200 3 excluded
filter(year_birth <=2004) %>% #161 39 excluded
filter(year_birth >=1922) %>% #161 0 excluded
filter(consent=="I consent")%>% #161 0 excluded
filter(is_parent=="Parent")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
library(lme4)
library(lmerTest)
library(ggplot2)
#library(tidylog)
#function for finding mode
find_mode <- function(x) {
u <- unique(x)
tab <- tabulate(match(x, u))
u[tab == max(tab)]
}
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
#203 (n of pre-exclusion)
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
filter(recaptcha_score >=.80) %>% #200 3 excluded
filter(year_birth <=2004) %>% #161 39 excluded
filter(year_birth >=1922) %>% #161 0 excluded
filter(consent=="I consent")%>% #161 0 excluded
filter(is_parent=="Parent")
161-127
range(as.numeric(x_2022_september_qualtrics_data$progress)) #31-100 completed
#203 (n of pre-exclusion)
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
filter(recaptcha_score >=.80) %>% #200 3 excluded
filter(year_birth <=2004) %>% #161 39 excluded
filter(year_birth >=1922) %>% #161 0 excluded
filter(consent=="I consent")%>% #161 0 excluded
filter(is_parent=="Parent") #127 34 excluded
#range(as.numeric(x_2022_september_qualtrics_data$progress)) #50-100 completed
# further exclude based on the completion rate (i.e., no response from Q5 onwards)
## first, check completion per question
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
# check if there's any response (flag NA = 0)
mutate(completed_Q1 = ifelse(is.na(year_birth), 0, 1),
completed_Q2 = ifelse(is.na(gender), 0, 1),
completed_Q3 = ifelse(is.na(country), 0, 1),
completed_Q4 = case_when(if_all(c(starts_with("is_"), not_caregiver), is.na) ~ 0,
TRUE ~ 1),
flag_Q5 = ifelse(is.na(visit_kotoboo), 0, 1),
flag_Q6 = ifelse(is.na(how_helpful_evidence_based), 0, 1),
flag_Q7 = ifelse(is.na(how_often_internet), 0, 1),
flag_Q8 = case_when(if_all(starts_with("which_topics"), is.na) ~ 0,
TRUE ~ 1),
flag_Q9 = case_when(if_all(starts_with("importance_"), is.na) ~ 0,
TRUE ~ 1),
flag_Q10 = ifelse(is.na(participate_in_science), 0, 1),
flag_Q11 = ifelse(is.na(comic_ideas), 0, 1)) %>%
# create a new variable indicating no response from Q5 onward
mutate(no_response = case_when(if_all(starts_with("flag_"), ~ . == 0) ~ 1,
TRUE ~ 0))
## identify response_id with no responses from Q5 onward
exclusion_completion <- x_2022_september_qualtrics_data %>%
filter(no_response == 1) %>%
distinct(response_id)
## remove those response_id from the data
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
anti_join(exclusion_completion) # 12 more excluded
# calculate completion rate per participant
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
mutate(sum_q_completed = rowSums(across(starts_with(c("completed_", "flag_"))), na.rm = TRUE),
rate_completed = round(sum_q_completed / 11 * 100, 2)) %>%
select(-starts_with(c("completed_", "flag_"))) #remove unnecessary variables
# mean, range, sd of completion rate
mean(as.numeric(x_2022_september_qualtrics_data$rate_completed)) # mean of 94% completion
range(as.numeric(x_2022_september_qualtrics_data$rate_completed)) #45-100% completed
sd(as.numeric(x_2022_september_qualtrics_data$rate_completed)) # sd of 13.48%
#average_pop <- x_2022_september_qualtrics_data %>%
#  select(progress) #%>%
#  #filter(progress!="100")
##average progress
#mean(as.numeric(average_pop$progress))
#sd(as.numeric(average_pop$progress))
#range(as.numeric(average_pop$progress))
#table(average_pop$progress)
mean(as.numeric(x_2022_september_qualtrics_data$duration_s))
median(as.numeric(x_2022_september_qualtrics_data$duration_s))
table(x_2022_september_qualtrics_data$duration_s)
# to minutes
median(as.numeric(x_2022_september_qualtrics_data$duration_s))/60
#Age range
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
mutate(survey_year = 2022) %>%
mutate(age = survey_year - as.numeric(year_birth))
range(x_2022_september_qualtrics_data$age) #19-63 years
mean(x_2022_september_qualtrics_data$age) #35.68 years
sd(x_2022_september_qualtrics_data$age) #6.36
sum(x_2022_september_qualtrics_data$gender=="Female", na.rm = T) #117 female
sum(x_2022_september_qualtrics_data$gender=="Male", na.rm = T)  # 28 male
sum(x_2022_september_qualtrics_data$gender=="Prefer not to answer", na.rm = T) #4
#NA = 1
country_table <- x_2022_september_qualtrics_data %>%
select(response_id, country) %>%
group_by(country) %>%
summarize(n = n()) %>%
ungroup() %>%
mutate(total_n = sum(n),
n_percent = round(n/total_n * 100, 1)) %>%
arrange(desc(n_percent))
#I will make a png map with this info
data_feature <- x_2022_september_qualtrics_data %>%
## select relevant variables
select(response_id, starts_with("importance_"), -starts_with("importance_other")) %>%
## transpose data frame
pivot_longer(-response_id, names_to = "feature", values_to = "rating") %>%
mutate(feature = as.factor(feature),
rating = as.numeric(rating)) %>%
## recode feature levels
mutate(feature = recode(feature,
"importance_concrete_advice" = "Concrete advice",
"importance_free" = "Free",
"importance_easy_to_access" = "Easy to access",
"importance_understandable" = "Understandable",
"importance_engaging" = "Engaging",
"importance_EDI" = "Diverse and inclusive",
"importance_social_media" = "Linked to social media",
"importance_reliable" = "Reliable",
"importance_evidence_based" = "Evidence-based",
"importance_unpretentious" = "Unpretentious",
"importance_respectful" = "Respectful",
"importance_fun" = "Fun",
"importance_unbiased" = "Unbiased"))
# calculate mean rating per features
mean_feature_rating <- data_feature %>%
filter(!is.na(rating)) %>%
## calculate mean rating per feature
group_by(feature) %>%
summarize(n = n(),
mean_rating = mean(rating, na.rm=T)) %>%
arrange(mean_rating) %>% # sort by ascending order as the smaller value indicates greater importance
ungroup()
#crank::meanranks(data_feature %>%
#                   pivot_wider(id_cols = response_id, names_from = feature, values_from = rating) %>%
#                   select(-response_id))
plot_mean_feature_rating <- mean_feature_rating %>%
ggplot(aes(x = reorder(feature, -mean_rating), y = mean_rating)) +
geom_point(size = 5) +
theme_minimal() +
scale_y_continuous(limits = c(1, 14), breaks = seq(1, 14, by = 1)) +
labs(x = "Feature",
y = "Importance rating averaged across participants") +
coord_flip() +
annotate("text", x=1, y=2, label="most important ←", color="red") +
annotate("text", x=1, y=13, label="→ least important", color ="red")
# visualize all variables by number of participants voted per feature
plot_feature_all <- data_feature %>%
count(rating, feature) %>% # count combos of rating & feature
ggplot(aes(x = rating, y = n, fill = factor(feature, levels = as.vector(mean_feature_rating$feature)))) +
geom_col(position = "fill") +
theme_minimal() +
scale_x_continuous(breaks=seq(1, 14, 1)) +
scale_fill_manual(values = c("#a50026", "#e31a1c", "#fb9a99", "#ff7f00", "#fdbf6f",
"#ffed6f", "#b2df8a", "#33a02c", "#02818a",
"#a6cee3", "#1f78b4", "#cab2d6", "#6a3d9a")) +
labs(x = "Rating (with 1 being the most important)",
y = "Proportion of participants",
fill = "Feature")
plot_feature_per_feature <- data_feature %>%
count(rating, feature) %>%
group_by(rating) %>%
mutate(rating = as.factor(rating),
#sum = sum(n),
prop = n/161) %>%
ungroup() %>%
#mutate(feature = match(as.vector(mean_feature_rating$feature), feature)) %>%
#filter(!is.na(rating)) %>%
ggplot(aes(x = fct_rev(factor(feature, levels = as.vector(mean_feature_rating$feature))),
y = prop,
fill = rating)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
scale_fill_manual(values = c("#a50026", "#e31a1c", "#fb9a99", "#ff7f00", "#fdbf6f",
"#ffed6f", "#ffff99", "#b2df8a", "#33a02c", "#02818a",
"#a6cee3", "#1f78b4", "#cab2d6", "#6a3d9a",  "#999999")) +
coord_flip() +
labs(x = "Feature",
y = "Proportion of participants",
fill = "Importance rating")
plot_mean_feature_rating <- mean_feature_rating %>%
ggplot(aes(x = reorder(feature, -mean_rating), y = mean_rating)) +
geom_point(size = 5) +
theme_minimal() +
scale_y_continuous(limits = c(1, 14), breaks = seq(1, 14, by = 1)) +
labs(x = "Feature",
y = "Importance rating averaged across participants") +
coord_flip() +
annotate("text", x=1, y=2, label="most important ←", color="red") +
annotate("text", x=1, y=13, label="→ least important", color ="red")
