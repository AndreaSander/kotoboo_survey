mutate(internet_search_frequency = Var1)
internet_plot <- ggplot(internet_table, aes(x="", y=percentage, fill=internet_search_frequency))+
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage internet search freq", x="")+
scale_fill_manual(values=c("#a7eb96",
"#c9b2daff",
"#ff9bb4",
"#ffc297",
"#f0aae5ff",
"#fff3b6",
"#a7ffd3ff",
"#a4d5eb"))+
theme_bw()
internet_plot
#Run this code only if you want to get the pie chart
internet_pie<- internet_plot + coord_polar("y", start=0) + theme_void()
internet_pie
mean_importance <- x_2022_june_qualtrics_data %>%
select(c("importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other"))%>%
pivot_longer(cols=c("importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other"),names_to = "characteristic", values_to= "rating")%>%
group_by(characteristic)%>%
mutate(rating = as.numeric(as.character(rating)))
mean_importance <- mean_importance %>%
mutate(characteristic = case_when(characteristic == "importance_concrete_advice" ~ "gives concrete advice",
characteristic == "importance_free" ~ "the content is free",
characteristic == "importance_easy_to_access" ~ "it's easy to access",
characteristic == "importance_understandable" ~ "content is understandable",
characteristic == "importance_engaging" ~ "content is engaging",
characteristic == "importance_EDI" ~ "fosters equity, diversity and inclusion",
characteristic == "importance_social_media" ~ "shareable in social media",
characteristic == "importance_reliable" ~ "the information is reliable",
characteristic == "importance_evidence_based" ~ "the content is evidence based",
characteristic == "importance_unpretentious" ~ "the content is unpretentious",
characteristic == "importance_respectful" ~ "the content is respectful",
characteristic == "importance_fun" ~ "the content is fun",
characteristic == "importance_unbiased" ~ "the content is unbiased",
characteristic == "importance_other" ~ "other reason not listed"))
plot<- mean_importance %>%
ungroup()%>%
group_by(characteristic)%>%
summarise(mean = mean(rating, na.rm=T))
plot<- plot %>%
mutate(characteristic = fct_reorder(plot$characteristic, plot$mean, .desc = T))
ggplot(plot, aes(y=characteristic, x=mean)) +
geom_point(size=5)+
theme_bw() +
labs(x="Importance Ranking 1-14", y="Feature")+
xlim(1, 14) +
annotate("text", y=1, x=3, label="most important <-", color="red") +
annotate("text", y=1, x=10, label="least important ->", color ="red")
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y=percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage, label= scales::percent(pct)),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y=percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage, label= scales::percent(percentage)),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y=percentage, fill=`respondent was a parent`, label= scales::percent(percentage)))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= scales::percent(percentage), fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = scales::percent(percentage)),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = scales::percent(percentage)),
position = position_stack(vjust = 0.5), show.legend = F)+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
View(careg_table)
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = scales::percent(Freq)),
position = position_stack(vjust = 0.5), show.legend = F)+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage, %),
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = percentage, "%"),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
#A. Percentage of caregivers
careg<- x_2022_june_qualtrics_data %>%
select(caregiver_type) %>%
mutate(parent = case_when(str_detect(caregiver_type, "Parent")==TRUE ~"TRUE",
TRUE~"FALSE"))
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
careg_plot <- ggplot(careg_table, aes(x="", y= percentage, fill=`respondent was a parent`))+
geom_bar(width = 1, stat = "identity") + geom_text(aes(label = paste0(percentage, "%")),
position = position_stack(vjust = 0.5))+
labs(y="percentage of caregiver who were parents", x="")+
scale_fill_manual(values=c("#ff9bb4", "#a7eb96"))+
theme_bw()
careg_plot
careg_pie<- careg_plot + coord_polar("y", start=0) + theme_void()
careg_pie
#I went a bit simpler here because making the other caregiver distinctions its going to be a lot of work, specially for a poster.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
country_table<- as.data.frame(table(x_2022_june_qualtrics_data$country))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
country_table<- as.data.frame(table(x_2022_june_qualtrics_data$country))
x_2022_june_qualtrics_data <- read_excel("2022_june_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "status", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "caregiver_type","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_interest","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_june_qualtrics_data<- x_2022_june_qualtrics_data [-c(1,2,3,4),]
country_table<- as.data.frame(table(x_2022_june_qualtrics_data$country))
#I will make a png map with this info
View(country_table)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "status", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "caregiver_type","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_interest","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(janitor)
library(readxl)
library(stringr)
x_2022_september_qualtrics_data <- read_excel("2022_september_qualtrics_data.xlsx", col_names=c("start_date", "end_date", "response_type", "progress", "duration_s", "finished", "recorded_date", "response_id","distribution_channel", "user_language", "recaptcha_score","consent", "year_birth", "gender","country", "not_caregiver", "is_parent","is_teacher","is_grandparent", "is_babysitter","is_aunt_uncle","is_sibling","is_therapist", "is_neighbour","is_family_friend", "is_other","visit_kotoboo", "how_helpful_evidence_based", "how_often_internet","which_topics_bilingualism","which_topics_screen_time","which_topics_lang_diversity","which_topics_sign_langauge","which_topics_foster_language","which_topics_reading_writing","which_topics_langauge_dev_disorders","which_topics_mythbusters","importance_concrete_advice", "importance_free","importance_easy_to_access", "importance_understandable", "importance_engaging","importance_EDI", "importance_social_media", "importance_reliable","importance_evidence_based", "importance_unpretentious", "importance_respectful","importance_fun", "importance_unbiased", "importance_other","importance_other_text", "participate_in_science", "comic_ideas", "comic_ideas_text", "sc0_score", "language", "q_language"))
x_2022_june_qualtrics_data<- x_2022_june_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_june_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data [-c(1,2,3,4),]
x_2022_september_qualtrics_data<- x_2022_september_qualtrics_data %>%
filter(year_birth <=2004) %>%
filter(year_birth >=1922) %>%
filter(consent=="I consent")
#completion range
range(as.numeric(x_2022_september_qualtrics_data$progress)) #31-100 completed
average_pop <- x_2022_september_qualtrics_data %>%
select(progress)%>%
filter(progress!="100")
#average progress
mean(as.numeric(average_pop$progress))
table(average_pop$progress)
#average time spent in survey (take median as the better measure)
mean(as.numeric(x_2022_june_qualtrics_data$duration_s))
average_pop <- x_2022_september_qualtrics_data %>%
select(progress)%>%
filter(progress!="100")
#average progress
mean(as.numeric(average_pop$progress))
table(average_pop$progress)
#average time spent in survey (take median as the better measure)
mean(as.numeric(x_2022_september_qualtrics_data$duration_s))
median(as.numeric(x_2022_september_qualtrics_data$duration_s))
table(x_2022_june_qualtrics_data$duration_s)
average_pop <- x_2022_september_qualtrics_data %>%
select(progress)%>%
filter(progress!="100")
#average progress
mean(as.numeric(average_pop$progress))
table(average_pop$progress)
#average time spent in survey (take median as the better measure)
mean(as.numeric(x_2022_september_qualtrics_data$duration_s))
median(as.numeric(x_2022_september_qualtrics_data$duration_s))
table(x_2022_september_qualtrics_data$duration_s)
#Age range
x_2022_september_qualtrics_data <- x_2022_september_qualtrics_data %>%
mutate(survey_year = 2022) %>%
mutate(age = survey_year - as.numeric(year_birth))
range(x_2022_september_qualtrics_data$age) #19-63 years
mean(x_2022_september_qualtrics_data$age) #35.58 years
#Gender
sum(x_2022_september_qualtrics_data$gender=="Female", na.rm = T) #123 female
sum(x_2022_september_qualtrics_data$gender=="Male", na.rm = T)  # 32 male
sum(x_2022_september_qualtrics_data$gender=="Prefer not to answer", na.rm = T) #4
#NA = 1
country_table<- as.data.frame(table(x_2022_june_qualtrics_data$country))
country_table<- as.data.frame(table(x_2022_september_qualtrics_data$country))
#I will make a png map with this info
View(country_table)
print(country_table)
View(x_2022_september_qualtrics_data)
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other))
View(careg)
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other)) %>%
summarise()
View(careg)
?summarise
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other)) %>%
summarise(n())
View(careg)
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver =="NA" ~ "F",
TRUE~"T"))
View(t)
View(careg)
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher))
View(t)
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "F",
TRUE~"T"))
View(t)
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F"))
View(t)
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(not_caregiver == "Teacher/Educator" ~ "T",
TRUE~"F"))
View(t)
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F"))
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
summarise(sum())
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F"))
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
tally
View(t)
#A. Percentage of caregivers
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other))
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
tally()
careg_table<- as.data.frame(table(careg$parent))
careg_table<- careg_table %>%
mutate(percentage = (Freq/160)*100)%>%
mutate("respondent was a parent" = Var1)
View(t)
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
colSums()
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ 1,
TRUE~0)) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ 1,
TRUE~0)) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ 1,
TRUE~ 0)) %>%
colSums()
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F"))
t<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher)) %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
count(not_caregiver, is_parent, is_teacher)
View(country_table)
View(t)
View(careg)
#A. Percentage of caregivers
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other))  %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
mutate(is_grandparent = case_when(is_grandparent == "Grandparent" ~ "T",
TRUE~"F")) %>%
mutate(is_babysitter = case_when(is_babysitter == "Nanny/Babysitter" ~ "T",
TRUE~"F")) %>%
mutate(is_aunt_uncle = case_when(is_aunt_uncle == "Uncle/Aunt" ~ "T",
TRUE~"F"))%>%
mutate(is_sibling = case_when(is_sibling == "Sibling" ~ "T",
TRUE~"F")) %>%
mutate(is_therapist = case_when(is_therapist == "Therapist" ~ "T",
TRUE~"F")) %>%
mutate(is_neighbour = case_when(is_neighbour == "Neighbour" ~ "T",
TRUE~"F")) %>%
mutate(is_family_friend = case_when(is_family_friend == "Family friend" ~ "T",
TRUE~"F")) %>%
mutate(is_other = case_when(is_other == "Other" ~ "T",
TRUE~"F")) %>%
count(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other)
View(careg)
#A. Percentage of caregivers
careg<- x_2022_september_qualtrics_data %>%
select(c(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other))  %>%
mutate(not_caregiver = case_when(not_caregiver == "I am not a caregiver" ~ "T",
TRUE~"F")) %>%
mutate(is_parent = case_when(is_parent == "Parent" ~ "T",
TRUE~"F")) %>%
mutate(is_teacher = case_when(is_teacher == "Teacher/Educator" ~ "T",
TRUE~"F")) %>%
mutate(is_grandparent = case_when(is_grandparent == "Grandparent" ~ "T",
TRUE~"F")) %>%
mutate(is_babysitter = case_when(is_babysitter == "Nanny/Babysitter" ~ "T",
TRUE~"F")) %>%
mutate(is_aunt_uncle = case_when(is_aunt_uncle == "Uncle/Aunt" ~ "T",
TRUE~"F"))%>%
mutate(is_sibling = case_when(is_sibling == "Sibling" ~ "T",
TRUE~"F")) %>%
mutate(is_therapist = case_when(is_therapist == "Therapist" ~ "T",
TRUE~"F")) %>%
mutate(is_neighbour = case_when(is_neighbour == "Neighbour" ~ "T",
TRUE~"F")) %>%
mutate(is_family_friend = case_when(is_family_friend == "Family friend" ~ "T",
TRUE~"F")) %>%
mutate(is_other = case_when(is_other == "Other" ~ "T",
TRUE~"F")) %>%
count(not_caregiver, is_parent, is_teacher, is_grandparent, is_babysitter, is_aunt_uncle,
is_sibling, is_therapist, is_neighbour, is_family_friend, is_other, sort=T)
View(careg)
print(careg)
